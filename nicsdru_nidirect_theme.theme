<?php

/**
 * @file
 * Functions to support theming in the nicsdru_nidirect_theme theme.
 */

use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_field().
 */
function nicsdru_nidirect_theme_preprocess_field(&$variables) {
  // Implement audit link.
  if (isset($variables['element'])
    && isset($variables['element']['#entity_type'])
    && ($variables['element']['#entity_type'] == 'node')
  ) {
    // Only start this processing if the 'nidirect_workflow'
    // module is installed.
    if (\Drupal::service('module_handler')->moduleExists('nidirect_workflow')) {
      $content_type = $variables['element']['#bundle'];
      switch ($content_type) {
        case 'health_condition':
          // For health conditions, just send the user to the node edit
          // form, where they can set the 'next review date' to a date
          // in the future to remove this node from the 'needs audit' view.
          $node = \Drupal::routeMatch()->getParameter('node');
          if (!empty($node) && is_object($node)) {
            $nid = $node->id();
            if (!empty($nid)) {
              // See if audit is due.
              $next_review_date = $node->get('field_next_review_date')->value;
              if (strtotime($next_review_date) < \Drupal::time()->getCurrentTime()) {
                // Next review date is in the past,
                // so this node is due for audit - display node edit link
                // (if the user is allowed to see it).
                $account = User::load(\Drupal::currentUser()->id());
                if ($account->hasPermission('audit content')) {
                  $audit_button_text = \Drupal::config('nidirect_workflow.auditsettings')->get('audit_button_text');
                  $audit_button_hover_text = \Drupal::config('nidirect_workflow.auditsettings')->get('audit_button_hover_text');
                  $variables['audit_link'] = '<a href="/node/' . $nid . '/edit" title="' . $audit_button_hover_text;
                  $variables['audit_link'] .= '" class="flag unflag-action flag-link-confirm" rel="nofollow">' . $audit_button_text . '</a>';
                }
              }
            }
          }
          break;

        case 'article':
        case 'contact':
        case 'page':
          // Get the current node.
          $node = \Drupal::routeMatch()->getParameter('node');
          if (!empty($node) && is_object($node)) {
            $nid = $node->id();
            if (!empty($nid)) {
              // See if audit is due.
              $next_audit_date = $node->get('field_next_audit_due')->value;
              if (strtotime($next_audit_date) < \Drupal::time()->getCurrentTime()) {
                // Next audit date is in the past,
                // so this node is due for audit - display the audit link
                // (if the user is allowed to see it).
                $account = User::load(\Drupal::currentUser()->id());
                if ($account->hasPermission('audit content')) {
                  $audit_button_text = \Drupal::config('nidirect_workflow.auditsettings')->get('audit_button_text');
                  $audit_button_hover_text = \Drupal::config('nidirect_workflow.auditsettings')->get('audit_button_hover_text');
                  $variables['audit_link'] = '<a href="/nidirect_workflow/content_audit/' . $nid;
                  $variables['audit_link'] .= '?destination=node/' . $nid . '" title="' . $audit_button_hover_text;
                  $variables['audit_link'] .= '" class="flag unflag-action flag-link-confirm" rel="nofollow">' . $audit_button_text . '</a>';
                }
              }
            }
          }
          break;
      }
    }
  }
}
