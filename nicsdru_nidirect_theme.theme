<?php

/**
 * @file
 * Functions to support theming in the nicsdru_nidirect_theme theme.
 */

use Drupal\Core\Link;
use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function nicsdru_nidirect_theme_preprocess_page(array &$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->bundle() == ('article' || 'application' || 'contact'
        || 'gp_practice' || 'health_condition' || 'news' || 'page' || 'recipe')
    ) {
      $variables['main_content_attr']['class'][] = 'grid';
      $variables['main_content_attr']['class'][] = 'layout--article-n-side';
      $variables['sidebar_second_attr']['class'][] = 'ga-aside';
    }
  }

  if (isset($variables['is_front']) && $variables['is_front'] == TRUE) {
    $variables['main_content_attr']['class'][] = 'grid';
  }
}

/**
 * Implements hook_preprocess_field().
 */
function nicsdru_nidirect_theme_preprocess_field(&$variables) {
  // Implement audit link.
  if (isset($variables['element'])
    && isset($variables['element']['#entity_type'])
    && ($variables['element']['#entity_type'] == 'node')
  ) {
    // We are only interested in certain content types.
    $content_type = $variables['element']['#bundle'];
    switch ($content_type) {
      case 'health_condition':
        _build_audit_link('health_condition', $variables);
        break;

      case 'article':
      case 'contact':
      case 'page':
        _build_audit_link('article', $variables);
        break;
    }
  }
  // Add a class to the anchor tag on application link fields
  if (isset($variables['element'])
    && $variables['element']['#field_name'] == 'field_link'
    && $variables['element']['#bundle'] == 'application'
  ) {
    $classes = ['btn', 'call-to-action'];
    $variables['items'][0]['content']['#url']->setOption('attributes', ['class' => $classes]);
  }
}

/**
 * Top level function to build audit links.
 */
function _build_audit_link($type, &$variables) {
  // Only start this processing if the 'origins_workflow'
  // module is installed.
  if (\Drupal::service('module_handler')->moduleExists('origins_workflow')) {
    // Get the current node.
    $node = \Drupal::routeMatch()->getParameter('node');
    if (!empty($node)) {
      $nid = $node->id();
      if (!empty($nid)) {
        if ($type == 'health_condition') {
          $variables['audit_link'] = _audit_link($type, $node->get('field_next_review_date')->value, $nid);
        }
        else {
          // This will be an article, contact or page.
          $variables['audit_link'] = _audit_link($type, $node->get('field_next_audit_due')->value, $nid);
        }
      }
    }
  }
}

/**
 * Utility function to build the audit link html.
 */
function _audit_link($type, $dt, $nid) {
  if (strtotime($dt) < \Drupal::time()->getCurrentTime()) {
    // Next review date is in the past,
    // so this node is due for audit - display node edit link
    // (if the user is allowed to see it).
    $account = User::load(\Drupal::currentUser()->id());
    if ($account->hasPermission('audit content')) {
      // Retrieve audit text from config.
      $audit_button_text = \Drupal::config('origins_workflow.auditsettings')->get('audit_button_text');
      $audit_button_hover_text = \Drupal::config('origins_workflow.auditsettings')->get('audit_button_hover_text');
      // Set up common attributes for links.
      $options = [
        'attributes' => [
          'rel' => 'nofollow',
          'title' => $audit_button_hover_text,
          'class' => 'audit_link',
        ],
      ];
      $link_object = NULL;
      if ($type == 'health_condition') {
        // For health conditions, just send the user to the node edit
        // form, where they can set the 'next review date' to a date
        // in the future to remove this node from the 'needs audit' view.
        $link_object = Link::createFromRoute($audit_button_text, 'entity.node.edit_form', ['node' => $nid], $options);
      }
      else {
        // For articles, contacts and pages send the user
        // to the 'content audit' page.
        $link_object = Link::createFromRoute($audit_button_text, 'origins_workflow.audit_controller_content_audit', ['nid' => $nid], $options);
      }
      if ($link_object) {
        // Return render array.
        return $link_object->toRenderable();
      }
      else {
        return "";
      }
    }
  }
}
