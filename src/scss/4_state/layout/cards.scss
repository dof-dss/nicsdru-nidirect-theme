/*
 * @file
 * Provides specific overrides for creating a card components.
 */
@import '../../init';

// Card borders
//
// Sets a color on any card borders.
// By default a `.card` element in a `.card-deck` can have modifier classes applied which add a border to either the
// top, bottom or both edges of the card. This declaration sets the base color for borders in a card deck as this rarely
// changes in the site design. It can of course be further overridden with additional states as defined below.
//
// Style guide: state.layout.cards
.card-deck {
  &.border-top,
  &.border-bottom {
    .card {
      border-color: $grey-medium;
    }
  }
}

.search-content {
  .view-search {
    max-width: 740px;
  }
}

// Front page taxonomy cards
//
// Overrides / fleshes out the cards component for the home page taxonomy cards.
// Main adjustments are controlling the layout of individual 'card' using css grid declarations this is qualified using
// the `.grid` class on the same element as the `.card-deck` class is applied to.
// The main heading of the card `.card--title` and the sub-sequent text selectors have attributes set for font properties
//
// Style guide: components.layouts.cards.home-site-topics
.section--info-services {
  .card {
    &-deck {
      grid-gap: 1.2rem 20px;

      @include breakpoint($phab) {
        grid-gap: 1.5rem 20px;
        grid-template-columns: repeat(2, 1fr);
      }
    }

    &__link {

      // Wraps everything in the card.
      display: block;
      background: none;
      color: inherit;
      border: 0;
      box-shadow: none;
      text-decoration: none;
      outline: 0;

      // Make card title behave like a link.
      .card__title {
        display: inline;
        color: $link;
        background-color: transparent;
        box-shadow: 0 1px 0 0 $link;
      }

      &:focus .card__title {
        color: #fff;
        background-color: $link;
        box-shadow: 0 0 0 3px $link;
      }

      &:hover .card__title {
        color: $link;
        background-color: transparent;
        box-shadow: 0 2px 0 0 $charcoal;
      }

      &:active .card__title {
        color: $link-active;
        background-color: transparent;
        box-shadow: 0 1px 0 0 $link-active;
      }
    }

    &__title {
      @include adjust-font-size-to(17px, 4);
      font-weight: 700;
      margin-bottom: .2rem;
      @include breakpoint($phab) {
        @include adjust-font-size-to(18px, 4.5);
        font-weight: 700;
        margin-bottom: .3rem;
      }
    }

    p {
      @include adjust-font-size-to(15px, 3.5);
      margin: .5em 0;
      @include breakpoint($phab) {
        @include adjust-font-size-to(16px, 3.5);
      }
    }
  }
}

// Front page featured cards
//
// Overrides / fleshes out the cards component for feature cards.
// Main adjustments are controlling the layout of individual 'card' using css grid declarations this is qualified using
// the `.grid` class on the same element as the `.card-deck` class is applied to.
// The main heading of the card `.card--title` and the sub-sequent text selectors have attributes set for font properties
//
// Style guide: components.layouts.cards.features

.card-deck--features {

  grid-gap: 20px;
  @include breakpoint($tab) {
    grid-template-columns: repeat(3, 1fr);

    > * {
      /* no grid support? */
      float: left;
      width: 33%;
    }
  }

  .card {

    &__link {

      // Wraps the entire card.
      display: flex;
      flex-flow: column nowrap;

      text-decoration: none !important;
      background: none;
      border: 0;
      box-shadow: none;

      @include breakpoint($mob $tab) {
        flex-flow: row nowrap;
      }

      &:hover {
        background-color: $brand-primary-lightest;
        outline: .5em solid $brand-primary-lightest;
        outline-offset: 0;
      }

      &:focus {
        background-color: transparent;
        outline: 3px solid $link;
        outline-offset: 6px;
      }
    }

    &__image {

      @include breakpoint($mob $tab) {
        flex: 38% 1 0;
        padding-right: 1em;
      }

      picture {
        width: 100%;
        height: auto;
        margin: 0;

        img {
          width: 100%;
          height: auto;
          margin: 0;
        }
      }
    }

    &__title {

      @include adjust-font-size-to(22px, 4.6667);

      @include breakpoint($phab, $no-query: true) {
        @include adjust-font-size-to(22px, 5);
      }

      position: relative;
      padding-right: 25px;
      margin: 1.2rem 0 .8rem;
      color: color(brand-secondary);

      @include breakpoint($mob $tab) {
        margin: 0 0 .8rem;
      }

      @include breakpoint($tab) {
        margin: 1.2rem 0 .9rem;
      }

      &::after {
        content: '';
        display: inline-block;
        position: absolute;
        top: 2px;
        right: -8px;
        width: 24px;
        height: 20px;
        background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2025%2015%22%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%20.st0%7Bfill%3A%230e6bb3%3Bfill-rule%3Aevenodd%3Bclip-rule%3Aevenodd%3B%7D%20%3C%2Fstyle%3E%3Cpath%20class%3D%22st0%22%20d%3D%22M12.5%200L0%2012l3%203%209.5-10L22%2015l3-3L12.5%200z%22%2F%3E%3C%2Fsvg%3E%0A');
        background-position: center right;
        background-size: 21px auto;
        background-repeat: no-repeat;
        transform: rotate(90deg);

        @include breakpoint($tab, $no-query: true) {
          top: .25em;
          right: -8px;
          background-size: 24px auto;
        }
      }
    }

    p {
      @include adjust-font-size-to(15px, 4);
      margin: 0;

      @include breakpoint($phab) {
        @include adjust-font-size-to(16px, 4);
      }
    }
  }
}
